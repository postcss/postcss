import Concat from 'concat-with-sourcemaps'
import { join } from 'node:path'
import { pathToFileURL } from 'node:url'
import { test } from 'uvu'
import { equal, is } from 'uvu/assert'

import { Input } from '../lib/postcss.js'

function urlOf(file: string): string {
  return pathToFileURL(join(__dirname, file)).toString()
}

test('fromLineAndColumn() returns offset', () => {
  let input = new Input('a {\n}')
  is(input.fromLineAndColumn(1, 1), 0)
  is(input.fromLineAndColumn(1, 3), 2)
  is(input.fromLineAndColumn(2, 1), 4)
  is(input.fromLineAndColumn(2, 2), 5)
})

test('fromOffset() returns line and column', () => {
  let input = new Input('a {\n}')
  equal(input.fromOffset(0), { col: 1, line: 1 })
  equal(input.fromOffset(2), { col: 3, line: 1 })
  equal(input.fromOffset(4), { col: 1, line: 2 })
  equal(input.fromOffset(5), { col: 2, line: 2 })
})

test('origin() returns false without source map', () => {
  let input = new Input('a {\n}')
  is(input.origin(1, 1), false)
})

test('origin() returns source position with source map', () => {
  let from = join(__dirname, 'build', 'all.css')
  let concat = new Concat(true, from, '\n')
  concat.add(urlOf('a.css'), 'a {}')
  concat.add(urlOf('b.css'), 'b {}\nc {}')
  let input = new Input(
    concat.content.toString(),
    { from, map: { prev: concat.sourceMap } }
  )
  equal(input.origin(1, 1), {
    column: 1,
    endColumn: undefined,
    endLine: undefined,
    file: join(__dirname, 'a.css'),
    line: 1,
    url: urlOf('a.css')
  })
  equal(input.origin(1, 4), {
    column: 1, // The original column generated by concat-with-sourcemaps is always 1
    endColumn: undefined,
    endLine: undefined,
    file: join(__dirname, 'a.css'),
    line: 1,
    url: urlOf('a.css')
  })
  equal(input.origin(2, 1), {
    column: 1,
    endColumn: undefined,
    endLine: undefined,
    file: join(__dirname, 'b.css'),
    line: 1,
    url: urlOf('b.css')
  })
  equal(input.origin(2, 4), {
    column: 1,  // The original column generated by concat-with-sourcemaps is always 1
    endColumn: undefined,
    endLine: undefined,
    file: join(__dirname, 'b.css'),
    line: 1,
    url: urlOf('b.css')
  })
  equal(input.origin(3, 1), {
    column: 1,
    endColumn: undefined,
    endLine: undefined,
    file: join(__dirname, 'b.css'),
    line: 2,
    url: urlOf('b.css')
  })
  equal(input.origin(2, 1, 3, 1), {
    column: 1,
    endColumn: 1,
    endLine: 2,
    file: join(__dirname, 'b.css'),
    line: 1,
    url: urlOf('b.css')
  })
})

test.run()
